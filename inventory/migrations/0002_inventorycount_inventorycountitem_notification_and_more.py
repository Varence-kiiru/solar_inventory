# Generated by Django 5.1.7 on 2025-03-26 21:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('count_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
            ],
            options={
                'verbose_name': 'Inventory Count',
                'verbose_name_plural': 'Inventory Counts',
                'ordering': ['-count_date'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCountItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_quantity', models.PositiveIntegerField()),
                ('counted_quantity', models.PositiveIntegerField()),
                ('notes', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Inventory Count Item',
                'verbose_name_plural': 'Inventory Count Items',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('link', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit', 'Credit'), ('bank', 'Bank Transfer'), ('mobile', 'Mobile Money'), ('card', 'Credit/Debit Card')], max_length=50)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Payment Received',
                'verbose_name_plural': 'Payments Received',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=255)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Product Specification',
                'verbose_name_plural': 'Product Specifications',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('adjustment_type', models.CharField(choices=[('increase', 'Increase'), ('decrease', 'Decrease')], max_length=10)),
                ('reason', models.CharField(max_length=255)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Stock Adjustment',
                'verbose_name_plural': 'Stock Adjustments',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('company_address', models.TextField()),
                ('company_phone', models.CharField(max_length=20)),
                ('company_email', models.EmailField(max_length=254)),
                ('company_website', models.URLField(blank=True)),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='settings/')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('currency_symbol', models.CharField(default='$', max_length=5)),
                ('low_stock_threshold', models.PositiveIntegerField(default=5)),
                ('enable_email_notifications', models.BooleanField(default=True)),
                ('default_payment_terms', models.CharField(default='Due on receipt', max_length=100)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('warranty_start', models.DateField(default=django.utils.timezone.now)),
                ('warranty_end', models.DateField()),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('terms', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Warranty',
                'verbose_name_plural': 'Warranties',
                'ordering': ['-warranty_end'],
            },
        ),
        migrations.CreateModel(
            name='WarrantyClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim_date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('resolved', 'Resolved')], default='pending', max_length=20)),
                ('resolution', models.TextField(blank=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Warranty Claim',
                'verbose_name_plural': 'Warranty Claims',
                'ordering': ['-claim_date'],
            },
        ),
        migrations.AlterModelOptions(
            name='brand',
            options={'ordering': ['name'], 'verbose_name': 'Brand', 'verbose_name_plural': 'Brands'},
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['name'], 'verbose_name': 'Customer', 'verbose_name_plural': 'Customers'},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name'], 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.AlterModelOptions(
            name='productcategory',
            options={'ordering': ['name'], 'verbose_name': 'Product Category', 'verbose_name_plural': 'Product Categories'},
        ),
        migrations.AlterModelOptions(
            name='purchaseorder',
            options={'ordering': ['-order_date'], 'verbose_name': 'Purchase Order', 'verbose_name_plural': 'Purchase Orders'},
        ),
        migrations.AlterModelOptions(
            name='purchaseorderitem',
            options={'verbose_name': 'Purchase Order Item', 'verbose_name_plural': 'Purchase Order Items'},
        ),
        migrations.AlterModelOptions(
            name='sale',
            options={'ordering': ['-sale_date'], 'verbose_name': 'Sale', 'verbose_name_plural': 'Sales'},
        ),
        migrations.AlterModelOptions(
            name='saleitem',
            options={'verbose_name': 'Sale Item', 'verbose_name_plural': 'Sale Items'},
        ),
        migrations.AlterModelOptions(
            name='supplier',
            options={'ordering': ['name'], 'verbose_name': 'Supplier', 'verbose_name_plural': 'Suppliers'},
        ),
        migrations.RenameField(
            model_name='purchaseorderitem',
            old_name='order',
            new_name='purchase_order',
        ),
        migrations.AddField(
            model_name='brand',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='brand',
            name='contact_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='brand',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='brand',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='company_name',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='customer',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='dimensions',
            field=models.CharField(blank=True, help_text='Format: LxWxH in cm', max_length=50),
        ),
        migrations.AddField(
            model_name='product',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.CharField(blank=True, help_text='Comma-separated tags', max_length=200),
        ),
        migrations.AddField(
            model_name='product',
            name='warranty_period',
            field=models.PositiveIntegerField(default=0, help_text='Warranty period in months'),
        ),
        migrations.AddField(
            model_name='product',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=8, null=True),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='icon',
            field=models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='order_number',
            field=models.CharField(blank=True, help_text='Auto-generated if left blank', max_length=20, unique=True),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='received_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_purchase_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='received_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='shipping_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Automatically calculated from items', max_digits=12),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='notes',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='sale',
            name='due_date',
            field=models.DateField(blank=True, help_text='Required for credit sales', null=True),
        ),
        migrations.AddField(
            model_name='sale',
            name='invoice_number',
            field=models.CharField(blank=True, help_text='Auto-generated if left blank', max_length=20, unique=True),
        ),
        migrations.AddField(
            model_name='sale',
            name='shipping_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='sale',
            name='tax_percentage',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='sale',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Automatically calculated from items', max_digits=12),
        ),
        migrations.AddField(
            model_name='saleitem',
            name='cost_price',
            field=models.DecimalField(decimal_places=2, default='0.00', help_text='Cost price at time of sale', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supplier',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='supplier',
            name='lead_time_days',
            field=models.PositiveIntegerField(default=7, help_text='Average lead time in days'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='supplier',
            name='payment_terms',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='employee_id',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_image',
            field=models.ImageField(blank=True, null=True, upload_to='profiles/'),
        ),
        migrations.AlterField(
            model_name='product',
            name='barcode',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='cost_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='purchaseorder',
            name='order_date',
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='purchaseorder',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('partially_received', 'Partially Received'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='purchaseorderitem',
            name='quantity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='purchaseorderitem',
            name='received_quantity',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='purchaseorderitem',
            name='unit_cost',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='sale',
            name='payment_method',
            field=models.CharField(choices=[('cash', 'Cash'), ('credit', 'Credit'), ('bank', 'Bank Transfer'), ('mobile', 'Mobile Money'), ('card', 'Credit/Debit Card')], default='cash', max_length=50),
        ),
        migrations.AlterField(
            model_name='sale',
            name='sale_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='discount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='quantity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorderitem',
            unique_together={('purchase_order', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='saleitem',
            unique_together={('sale', 'product')},
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['name'], name='inventory_c_name_a2eb08_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='inventory_c_email_c8fd29_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_active'], name='inventory_c_is_acti_0b76e4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='inventory_p_sku_f85905_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='inventory_p_name_f6a6a1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['active'], name='inventory_p_active_ee46da_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['order_date'], name='inventory_p_order_d_472534_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['status'], name='inventory_p_status_43427b_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['sale_date'], name='inventory_s_sale_da_793dc6_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['paid'], name='inventory_s_paid_5819ba_idx'),
        ),
        migrations.AddField(
            model_name='inventorycount',
            name='counted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_counts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventorycountitem',
            name='inventory_count',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycount'),
        ),
        migrations.AddField(
            model_name='inventorycountitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='count_items', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paymentreceived',
            name='received_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_payments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paymentreceived',
            name='sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='inventory.sale'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='productspecification',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stockadjustment',
            name='adjusted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_adjustments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockadjustment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_adjustments', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='warranty',
            name='sale_item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='warranty', to='inventory.saleitem'),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='warranty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='inventory.warranty'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorycountitem',
            unique_together={('inventory_count', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='productspecification',
            unique_together={('product', 'name')},
        ),
    ]
